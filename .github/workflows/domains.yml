---
name: Emergency lockdown for testnet


"on":
  workflow_dispatch:
    inputs:
      # do not remove domains from 'description', they are used for tests
      easytrack:
        description: 'easytrack.testnet.fi'
        type: boolean
        required: true
      operators:
        description: 'operators.testnet.fi'
        type: boolean
        required: true
      polygon:
        description: 'polygon.testnet.fi'
        type: boolean
        required: true
      solana:
        description: 'solana.testnet.fi'
        type: boolean
        required: true
      stake:
        description: 'stake.testnet.fi'
        required: true
        type: boolean
      trp:
        description: 'trp.testnet.fi'
        required: true
        type: boolean
      vote:
        description: 'vote.testnet.fi'
        type: boolean
        required: true
      state:
        description: "State of lock: present/absent"
        type: choice
        required: true
        options:
          - present
          - absent
        default: 'present'

permissions:
  contents: read
  packages: read

env:
  ANSIBLE_FORCE_COLOR: "True"
  ANSIBLE_LOG_FOLDER: logs
  ANSIBLE_INVENTORY: "inventories/testnet/,secret_inventories/testnet/,inventories/ci_user.yml"
  encrypted_ci_env: ""

jobs:
  lockdown:
    runs-on: ubuntu-latest
    steps:

      - name: Generate domain list
        run: |
          domains=$(echo $INPUTS | jq -r 'to_entries | map(select(.value == true) | .key + ".testnet.fi") | join(",")')
          if [ -z "$domains" ]; then
            echo "No domains are set to true. Failing the job."
            exit 1
          fi
          echo "domain_list=$domains" >> $GITHUB_ENV
        env:
          INPUTS: ${{ toJSON(inputs) }}

      - name: Show the action to be executed
        run: |
          if [ "${{ github.event.inputs.state }}" == "present" ]; then
            echo "Enabling lockdown page for the following domains: ${{ env.domain_list }}"
          else
            echo "Disabling lockdown page for the following domains: ${{ env.domain_list }}"
          fi

      - name: Lockdown
        run: echo ansible-playbook
          playbooks/lockdown.yaml
          -e lockdown_domain_list=${{ env.domain_list }}
          -e lockdown_state=${{ github.event.inputs.state }}
